@model IEnumerable<Blog>

@{
    ViewData["Title"] = "Blog";
}

<!-- blog starter start -->
<section id="blog-starter">
    <div class="container blog-starter-container">
        <div class="row blog-starter-row">
            <h1 class="blog-starter-heading">Blog Side</h1>
        </div>
    </div>
</section>
<!-- blog starter end -->
<!-- blogs start -->
<section id="blogs">
    <div class="container blogs-container">
        <div class="row blogs-row">
            @foreach (var item in Model)
            {
                <div class="col-xl-3 col-lg-3 col-md-6 col-sm-12 blogs-col">
                    <div class="card blogs-card">
                        <img src="~/uploads/blogs/@item.BlogImages.FirstOrDefault(bi => bi.IsMain)?.ImagePath"
                         class="card-img-top"
                         alt="Blogs Image" />
                        <div class="card-body">
                            <h5 class="card-title">@item.Title</h5>
                            <p class="card-text">
                                @item.Description.EllipseText(100)
                            </p>
                            <div class="card-like-unlike-side">
                                <div class="like-side">
                                    <i class="fa-solid fa-thumbs-up" data-blog-id="@item.Id"></i>
                                    <span class="like-count">0</span>
                                </div>
                                <div class="unlike-side">
                                    <i class="fa-solid fa-thumbs-down" data-blog-id="@item.Id"></i>
                                    <span class="unlike-count">0</span>
                                </div>
                            </div>
                            <a asp-action="Details" asp-route-id="@item.Id"
                           class="btn btn-primary details-btn">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>
<!-- blogs end -->
@section js{
<script src="~/assets/js/blog.js"></script>
<script>
    $(document).ready(function(){
       // Like
       let likeBtn = $('.like-side>i');
        $(likeBtn).click((e) => {
            let blogId = $(e.currentTarget).data('blog-id');
            let likeCount = $(e.currentTarget).next('.like-count');
            let currentUnlikeCount = $(e.currentTarget).closest('.card-like-unlike-side').find('.unlike-count');
            $.ajax({
                url: `@Url.Action("BlogLike", "Blog")?blogId=${blogId}`,
                type: "POST",
                success: function (successMsg) {
                    if (successMsg.error == false && successMsg.likeCount) {
                        $(likeCount).text(successMsg.likeCount);
                        $(currentUnlikeCount).text(successMsg.unlikeCount);
                    }
                },
                error: function (errorMsg) {
                    switch (errorMsg.status) {
                        case 401:
                            window.location.href = `@Url.Action("SignIn", "Account")?returnUrl=${window.location.pathname}#blog-${blogId}`
                            break;
                        default:
                            console.log(errorMsg);
                            break;
                    }
                }
            });
        });
        // Like

        // Unlike
           let unlikeBtn = $('.unlike-side>i');
           $(unlikeBtn).click((e) => {
               let blogId = $(e.currentTarget).data('blog-id');
               let unlikeCount = $(e.currentTarget).next('.unlike-count');
               let currentLikeCount = $(e.currentTarget).closest('.card-like-unlike-side').find('.like-count');
               $.ajax({
                   url: `@Url.Action("BlogUnlike", "Blog")/${blogId}`,
                   type: "POST",
                   success: function (successMsg) {
                       if (successMsg.error == false && successMsg.unlikeCount) {
                           $(unlikeCount).text(successMsg.unlikeCount);
                           $(currentLikeCount).text(successMsg.likeCount);
                       }
                   },
                   error: function (errorMsg) {
                       switch (errorMsg.status) {
                           case 401:
                               window.location.href = `@Url.Action("SignIn", "Account")?returnUrl=${window.location.pathname}?%blog-${blogId}`
                               break;
                           default:
                               console.log(errorMsg);
                               break;
                       }
                   }
               });
           });
        // Unlike
    });
</script>
}
